# Source: https://github.com/phrb/intro-cuda/blob/master/src/cuda-samples/5_Simulations/fluidsGL/fluidsGL_kernels.cu
# GPUVerify times out

shared
  part, v;

const
 global dx,
 global dy,
 global lb,
 local blockIdx.x,
 local threadIdx.x,
 local blockIdx.y,
 local threadIdx.y,
 global blockDim.y,
 global blockDim.x,
 global gridDim.x,
 global gridDim.y,

where blockIdx.x < gridDim.x &&
      blockIdx.y < gridDim.y &&
      threadIdx.x < blockDim.x &&
      threadIdx.y < blockDim.y &&
      distinct [threadIdx.x][threadIdx.y][blockIdx.x][blockIdx.y] &&

    # GPUVerify assumptions
      blockDim.x == 64 &&
      blockDim.y == 4 &&
      lb == 16 &&
      dx == 512
    # gridDim.x == 8 &&
    # gridDim.y == 8 &&
    # dy == 512 &&
    # fj < 1024
    ;

let gtidx = blockIdx.x * blockDim.x + threadIdx.x;
let gtidy = blockIdx.y * (lb * blockDim.y) + threadIdx.y * lb;

foreach (p in 0 .. lb) {
    let fi = gtidy + p;
    let fj = fi * dx + gtidx;
    if (gtidx < dx && fi < dy) {
      ro part[fj];
      rw part[fj];
    }
}