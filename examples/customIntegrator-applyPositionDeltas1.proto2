
shared posq, posqCorrection, posDelta;
const
  global NUM_ATOMS,
  # Default CUDA 1-D decls
  local threadIdx,
  local blockIdx,
  global blockDim, # Must be a globally defined constant
  global gridDim,  # Must be a globally defined constant
  ;
# https://www.nvidia.com/docs/IO/116711/sc11-cuda-c-basics.pdf
# https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#features-and-technical-specifications
# Default CUDA 1-D constraints
assert 1@blockIdx != 2@blockIdx
    || 1@threadIdx != 2@threadIdx;
assert blockDim >= 1;
assert gridDim >= 1;
# USE_MIXED_PRECISION = true
# If we assume this, then it always works.
assert blockDim == 512;

# This is a pre-condition of this kernel
assert NUM_ATOMS <= blockDim;

foreach index < NUM_ATOMS {
  assert index >= blockIdx*blockDim + threadIdx;
  assert (index - blockIdx*blockDim + threadIdx) % (blockDim*gridDim) == 0;
  ro posq[index];           # 36
  ro posqCorrection[index]; # 37
  ro posDelta[index];       # 42--44
  rw posq[index];           # 46
  rw posqCorrection[index]; # 47
  rw posDelta[index];       # 51
}
