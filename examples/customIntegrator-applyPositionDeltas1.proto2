
shared posq, posqCorrection, posDelta;
const NUM_ATOMS,
  local $threadCount,
  # Default CUDA 1-D decls
  local $threadIdx_x,
  local $blockIdx_x,
  $blockDim_x, # Must be a globally defined constant
  $gridDim_x,  # Must be a globally defined constant
  ;
# https://www.nvidia.com/docs/IO/116711/sc11-cuda-c-basics.pdf
# https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#features-and-technical-specifications
# Default CUDA 1-D constraints
assert 1@$blockIdx_x != 2@$blockIdx_x
    || 1@$threadIdx_x != 2@$threadIdx_x;
assert $blockDim_x >= 1;
assert $gridDim_x >= 1;
# USE_MIXED_PRECISION = true

# This is a pre-condition of this kernel
assert NUM_ATOMS <= $blockDim_x;

assert $threadCount == $blockDim_x * $gridDim_x;
foreach index < NUM_ATOMS {
  assert index >= $blockIdx_x*$blockDim_x + $threadIdx_x;
  assert (index - $blockIdx_x*$blockDim_x + $threadIdx_x) % $threadCount == 0;
  ro posq[index];           # 36
  ro posqCorrection[index]; # 37
  ro posDelta[index];       # 42--44
  rw posq[index];           # 46
  rw posqCorrection[index]; # 47
  rw posDelta[index];       # 51
};
