# Source: https://github.com/phrb/intro-cuda/blob/master/src/cuda-samples/5_Simulations/fluidsGL/fluidsGL_kernels.cu
# GPUVerify times out

shared
  vx, vy;

const
 local gtidx,
 local gtidy,
 local blockIdx.x,
 local threadIdx.x,
 local blockIdx.y,
 local threadIdx.y,
where
#  blockIdx.x < gridDim.x &&
#  blockIdx.y < gridDim.y &&
  blockIdx.x < 8 &&
  blockIdx.y < 8 &&
#  threadIdx.x < blockDim.x &&
#  threadIdx.y < blockDim.y &&
  threadIdx.x < 64 &&
  threadIdx.y < 4 &&
  distinct [threadIdx.x][threadIdx.y][blockIdx.x][blockIdx.y];

# GPUVerify assumptions
let gridDim.x = 8;
let gridDim.y = 8;
let blockDim.x = 64;
let blockDim.y = 4;
let lb = 16;
let dx = 512;
let dy = 512;


let gtidx = blockIdx.x * blockDim.x + threadIdx.x;
let gtidy = blockIdx.y * (lb * blockDim.y) + threadIdx.y * lb;

  foreach (p in 0 .. lb) {
    let fi = gtidy + p;
    let fj = fi * dx + gtidx;
    if (fj < 1024 && gtidx < dx && fi < dy) {
      rw vx[fj];
      rw vy[fj];
    }
  }
